name: demo-ts

services:
  ############################
  # backend app + Dapr sidecar
  ############################
  <%= name %>:
    labels:
      - 'sos.service-type=microservice'
    build:
      dockerfile: ./Dockerfile.dev
    ports:
      - '3500:3500'
    command: npm run dev
    environment:
      SERVICE_NAME: <%= name %>
      NODE_ENV: development
      # SEED_DATA: true # Load seed data on start
      JWT_SECRET_KEY: secret
      CHOKIDAR_USEPOLLING: true # Supports "tsx watch" for live reloading
      DAPR_HOST: 0.0.0.0
      DAPR_PORT: 3500
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_NAME: postgres-ts
      DB_PASSWORD: postgres
      OTLP_ENDPOINT: http://grafana-otel:4318
      # DB_DEBUG: 1
      # DB_SSL: postgres # Production
    volumes:
      - /app/node_modules # Persist docker containers modules so that localhost are not used
      - ./src:/app/src
    depends_on:
      - redis
      - placement
      - zipkin
      - postgres
    restart: on-failure
    networks:
      - dapr-net
  <%= name %>-dapr:
    labels:
      - 'sos.service-type=microservice'
      - 'dapr.io/enabled=true' # Enable Dapr for this service
      - 'dapr.io/config=configstore'
    image: 'docker.io/daprio/daprd:edge'
    command:
      [
        './daprd',
        '--app-id',
        '<%= name %>',
        '--app-port',
        '3001',
        '--config',
        '/configuration/config.yaml',
        '--dapr-http-port',
        '3500',
        '--enable-api-logging',
        '--enable-profiling',
        '--log-as-json',
        'true',
        '--placement-host-address',
        'placement:50005',
        '--profile-port',
        '7777',
        '--resources-path',
        '/components',
      ]
    volumes:
      # Volume mounts are relative from the root directory where dapr-net-compose is run from
      - './dapr/components/:/components'
      - './dapr/config/:/configuration'
    depends_on:
      - <%= name %>
    network_mode: 'service:<%= name %>'

networks:
  dapr-net: # here we set the network name
    driver: bridge
